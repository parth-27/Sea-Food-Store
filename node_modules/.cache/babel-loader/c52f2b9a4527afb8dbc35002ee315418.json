{"ast":null,"code":"import _classCallCheck from\"/home/pal/Desktop/Sea-Food-Store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/pal/Desktop/Sea-Food-Store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/pal/Desktop/Sea-Food-Store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/pal/Desktop/Sea-Food-Store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{getFunName}from'../helpers';import PropTypes from'prop-types';// creating a component.\n// props to pass data from one component to other component and state to hold the data.\nvar StorePicker=/*#__PURE__*/function(_React$Component){_inherits(StorePicker,_React$Component);var _super=_createSuper(StorePicker);function StorePicker(){_classCallCheck(this,StorePicker);return _super.apply(this,arguments);}_createClass(StorePicker,[{key:\"goToStore\",// constructor(){\n//     super();    // runs the React.Component first than StorePicker.\n//     this.goToStore = this.goToStore.bind(this);     // we have to bind every single function other than the render. Because only render is bind and not other by default.\n// }\nvalue:function goToStore(event){// first grab the text from the box.\nevent.preventDefault();var storeId=this.storeInput.value;console.log(this.storeInput.value);// second do the transition from / to /store/..\nthis.props.history.push(\"/store/\".concat(storeId));}// render method are bound to the component while other method like goToStore doesn't bound to the component.\n},{key:\"render\",value:function render(){var _this=this;//return <p>Hello World</p>;\n// creating paragraph tag with class Name Testing and text React is Awesome.\n//return React.createElement('p',{className:'Testing'},'React is Awesome');\nreturn/*#__PURE__*/ (// JSX will return only one element so make it a parent element.\nReact.createElement(\"form\",{className:\"store-selector\",onSubmit:function onSubmit(e){return _this.goToStore(e);}},/*#__PURE__*/React.createElement(\"h2\",null,\"Please Enter A Store\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",required:true,placeholder:\"Store Name\",defaultValue:getFunName(),ref:function ref(input){_this.storeInput=input;}}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Visit Store\")));}}]);return StorePicker;}(React.Component);export{StorePicker as default};StorePicker.contextType={router:PropTypes.object};// getting our router OR surface our router.","map":{"version":3,"sources":["/home/pal/Desktop/Sea-Food-Store/src/components/StorePicker.js"],"names":["React","getFunName","PropTypes","StorePicker","event","preventDefault","storeId","storeInput","value","console","log","props","history","push","e","goToStore","input","Component","contextType","router","object"],"mappings":"4kBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CAGA;AACA;GACqBC,CAAAA,W,+PAEjB;AACA;AACA;AACA;yBAEUC,K,CAAM,CACZ;AACAA,KAAK,CAACC,cAAN,GACA,GAAMC,CAAAA,OAAO,CAAG,KAAKC,UAAL,CAAgBC,KAAhC,CACAC,OAAO,CAACC,GAAR,CAAY,KAAKH,UAAL,CAAgBC,KAA5B,EAEA;AACA,KAAKG,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,kBAAkCP,OAAlC,GACH,CAGD;uCACK,gBACD;AAEA;AACA;AAEA,oBACI;AACA,4BAAM,SAAS,CAAG,gBAAlB,CAAmC,QAAQ,CAAE,kBAACQ,CAAD,QAAO,CAAA,KAAI,CAACC,SAAL,CAAeD,CAAf,CAAP,EAA7C,eAII,qDAJJ,cAKI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,QAAQ,KAA3B,CAA4B,WAAW,CAAC,YAAxC,CAAqD,YAAY,CAAEb,UAAU,EAA7E,CAAiF,GAAG,CAAE,aAACe,KAAD,CAAW,CAAC,KAAI,CAACT,UAAL,CAAkBS,KAAlB,CAAwB,CAA1H,EALJ,cAMI,8BAAQ,IAAI,CAAC,QAAb,gBANJ,CAFJ,EAWH,C,yBApCoChB,KAAK,CAACiB,S,SAA1Bd,W,aAwCrBA,WAAW,CAACe,WAAZ,CAAwB,CACpBC,MAAM,CAAEjB,SAAS,CAACkB,MADE,CAAxB,CAKA","sourcesContent":["import React from 'react';\nimport { getFunName } from '../helpers';\nimport PropTypes from 'prop-types';    \n\n\n// creating a component.\n// props to pass data from one component to other component and state to hold the data.\nexport default class StorePicker extends React.Component{\n\n    // constructor(){\n    //     super();    // runs the React.Component first than StorePicker.\n    //     this.goToStore = this.goToStore.bind(this);     // we have to bind every single function other than the render. Because only render is bind and not other by default.\n    // }\n\n    goToStore(event){\n        // first grab the text from the box.\n        event.preventDefault();\n        const storeId = this.storeInput.value;\n        console.log(this.storeInput.value);   \n\n        // second do the transition from / to /store/..\n        this.props.history.push(`/store/${storeId}`);\n    }\n\n\n    // render method are bound to the component while other method like goToStore doesn't bound to the component.\n\trender(){\n        //return <p>Hello World</p>;\n        \n        // creating paragraph tag with class Name Testing and text React is Awesome.\n        //return React.createElement('p',{className:'Testing'},'React is Awesome');\n\n        return(\n            // JSX will return only one element so make it a parent element.\n            <form className = \"store-selector\" onSubmit={(e) => this.goToStore(e)}>    \n                {/* we can bind onSubmit event by this.goToStore.bind(this) or with the help of constructor. */}\n\n                {/* comment in jsx */}\n                <h2>Please Enter A Store</h2>\n                <input type=\"text\" required placeholder=\"Store Name\" defaultValue={getFunName()} ref={(input) => {this.storeInput = input}} />\n                <button type=\"submit\">Visit Store</button>\n            </form>\n        )   \n    }\n\n}\n\nStorePicker.contextType={\n    router: PropTypes.object\n}\n\n\n// getting our router OR surface our router."]},"metadata":{},"sourceType":"module"}