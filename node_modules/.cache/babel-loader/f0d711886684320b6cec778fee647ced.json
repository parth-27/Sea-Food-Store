{"ast":null,"code":"import _defineProperty from\"/home/pal/Desktop/react-beginner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/pal/Desktop/react-beginner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/pal/Desktop/react-beginner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/pal/Desktop/react-beginner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/pal/Desktop/react-beginner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/pal/Desktop/react-beginner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/pal/Desktop/react-beginner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/pal/Desktop/react-beginner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/pal/Desktop/react-beginner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import AddFishForm from'./AddFishForm';import base from'../base';import firebase from'firebase';var Inventory=/*#__PURE__*/function(_React$Component){_inherits(Inventory,_React$Component);var _super=_createSuper(Inventory);function Inventory(){var _this;_classCallCheck(this,Inventory);_this=_super.call(this);_this.uiConfig={signInFlow:\"popup\",signInOptions:[// firebase.auth.GoogleAuthProvider.PROVIDER_ID,\nfirebase.auth.FacebookAuthProvider.PROVIDER_ID,firebase.auth.TwitterAuthProvider.PROVIDER_ID,firebase.auth.GithubAuthProvider.PROVIDER_ID//firebase.auth.EmailAuthProvider.PROVIDER_ID\n],callbacks:{signInSuccess:function signInSuccess(){return false;}}};_this.authHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(authData){var store;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return base.fetch(_this.props.storeId,{context:_assertThisInitialized(_this)});case 2:store=_context.sent;console.log(store);// 2. Claim it if there is no owner\nif(store.owner){_context.next=7;break;}_context.next=7;return base.post(\"\".concat(_this.props.storeId,\"/owner\"),{data:authData.user.uid});case 7:// 3. Set the state of the inventory component to reflect the current user\n_this.setState({uid:authData.user.uid,owner:store.owner||authData.user.uid});case 8:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.authenticate=function(provider){if(provider==='github'){var authProvider=new firebase.auth.GithubAuthProvider();firebase.auth().signInWithPopup(authProvider).then(_this.authHandler);}else if(provider==='facebook'){var _authProvider=new firebase.auth.FacebookAuthProvider();firebase.auth().signInWithPopup(_authProvider).then(_this.authHandler);}else{var _authProvider2=new firebase.auth.TwitterAuthProvider();firebase.auth().signInWithPopup(_authProvider2).then(_this.authHandler);}};_this.renderInventory=_this.renderInventory.bind(_assertThisInitialized(_this));_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.renderLogin=_this.renderLogin.bind(_assertThisInitialized(_this));_this.authenticate=_this.authenticate.bind(_assertThisInitialized(_this));_this.authHandler=_this.authHandler.bind(_assertThisInitialized(_this));_this.logout=_this.logout.bind(_assertThisInitialized(_this));_this.state={uid:null,owner:null};return _this;}// life cycle hooks.\n_createClass(Inventory,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;firebase.auth().onAuthStateChanged(function(user){if(user){_this2.authHandler({user:user});}});}},{key:\"handleChange\",value:function handleChange(e,key){var fish=this.props.fishes[key];var updatedFish=_objectSpread(_objectSpread({},fish),{},_defineProperty({},e.target.name,e.target.value));this.props.updateFish(key,updatedFish);}},{key:\"renderInventory\",value:function renderInventory(key){var _this3=this;var fish=this.props.fishes[key];return/*#__PURE__*/React.createElement(\"div\",{className:\"fish-edit\",key:key},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"name\",value:fish.name,placeholder:\"Fish Name\",onChange:function onChange(e){return _this3.handleChange(e,key);}}),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"price\",value:fish.price,placeholder:\"Fish Price\",onChange:function onChange(e){return _this3.handleChange(e,key);}}),/*#__PURE__*/React.createElement(\"select\",{type:\"text\",name:\"status\",value:fish.status,placeholder:\"Fish Status\",onChange:function onChange(e){return _this3.handleChange(e,key);}},/*#__PURE__*/React.createElement(\"option\",{value:\"available\"},\"Fresh!\"),/*#__PURE__*/React.createElement(\"option\",{value:\"unavailable\"},\"Sold Out!\")),/*#__PURE__*/React.createElement(\"textarea\",{type:\"text\",name:\"desc\",value:fish.desc,placeholder:\"Fish Desc\",onChange:function onChange(e){return _this3.handleChange(e,key);}}),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"image\",value:fish.image,placeholder:\"Fish Image\",onChange:function onChange(e){return _this3.handleChange(e,key);}}),/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return _this3.props.removeFish(key);}},\"Remove Fish\"));}},{key:\"logout\",// authenticate = (provider) => {\n//     console.log(`Trying to login with ${provider}`);\n//     console.log(this.props.storeId);\n//     if (provider === 'github') {\n//         var provider = new firebase.auth.GithubAuthProvider();\n//         provider.addScope('repo');\n//         firebase.auth().signInWithPopup(provider).then( (result) => {\n//             console.log(result);\n//             // grab the store info if the user has successfully authenticate.\n//             const storeRef = firebase.database().ref(this.props.storeId);\n//             // query the firebase once for the data\n//             storeRef.once('value', (snapshot) => {\n//                 const data = snapshot.val() || {};\n//                 // claim it as our own if there is no owner already.\n//                 if (!data.owner) {\n//                     storeRef.set({\n//                         owner: result.user.uid\n//                     });\n//                 }\n//                 this.setState({\n//                     uid: result.user.uid,\n//                     owner: data.owner || result.user.uid\n//                 })\n//             });\n//         }).catch(function (error) {\n//             console.log(error);\n//         });    \n//     }\n//     else if (provider === 'facebook') {\n//         var provider = new firebase.auth.FacebookAuthProvider();\n//         provider.addScope('user_birthday');\n//         firebase.auth().signInWithPopup(provider).then( (authData) => {\n//             console.log(authData);\n//             // grab the store info if the user has successfully authenticate.\n//             const storeRef = firebase.database().ref(this.props.storeId);\n//             // query the firebase once for the data\n//             storeRef.once('value', (snapshot) => {\n//                 const data = snapshot.val() || {};\n//                 // claim it as our own if there is no owner already.\n//                 if (!data.owner) {\n//                     storeRef.set({\n//                         owner: authData.user.uid\n//                     });\n//                 }\n//                 this.setState({\n//                     uid: authData.user.uid,\n//                     owner: data.owner || authData.user.uid\n//                 })\n//             });\n//         }).catch(function (error) {\n//             console.log(error);\n//         });\n//     }\n//     else\n//     {\n//         var provider = new firebase.auth.TwitterAuthProvider();\n//         // here we have to use arrow functions because in normal functions storeId won't be accessible because of this keyword.\n//         firebase.auth().signInWithPopup(provider).then( (authData) => {\n//             console.log(authData);\n//             // grab the store info if the user has successfully authenticate.\n//             const storeRef = firebase.database().ref(this.props.storeId);\n//             // query the firebase once for the data\n//             storeRef.once('value', (snapshot) => {\n//                 const data = snapshot.val() || {};\n//                 // claim it as our own if there is no owner already.\n//                 if (!data.owner) {\n//                     storeRef.set({\n//                         owner: authData.user.uid\n//                     });\n//                 }\n//                 this.setState({\n//                     uid: authData.user.uid,\n//                     owner: data.owner || authData.user.uid\n//                 })\n//             });\n//         }).catch(function (error) {\n//             console.log(error);\n//         });\n//     }\n//     //base.AuthWithOAuthPopup(provider,this.authHandler); \n// }\n// logout method\nvalue:function logout(){firebase.auth().signOut();this.setState({uid:null});}},{key:\"renderLogin\",value:function renderLogin(){var _this4=this;return/*#__PURE__*/React.createElement(\"nav\",{className:\"login\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Inventory\"),/*#__PURE__*/React.createElement(\"p\",null,\"Sign in to manage your store's inventory\"),/*#__PURE__*/React.createElement(\"button\",{className:\"github\",onClick:function onClick(){return _this4.authenticate('github');}},\"Log In with Github\"),/*#__PURE__*/React.createElement(\"button\",{className:\"facebook\",onClick:function onClick(){return _this4.authenticate('facebook');}},\"Log In with Facebook\"),/*#__PURE__*/React.createElement(\"button\",{className:\"twitter\",onClick:function onClick(){return _this4.authenticate('twitter');}},\"Log In with Twitter\"));}},{key:\"render\",value:function render(){var logout=/*#__PURE__*/React.createElement(\"button\",{onClick:this.logout},\"Log Out!!\");//check if they are not logged in at all\nif(!this.state.uid){return/*#__PURE__*/React.createElement(\"div\",null,this.renderLogin());}// check if they are the owner of the current store.\nif(this.state.uid!==this.state.owner){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,\"Sorry you are not the owner of the Store\"),logout);}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"Inventory\"),logout,Object.keys(this.props.fishes).map(this.renderInventory),/*#__PURE__*/React.createElement(AddFishForm,{addFish:this.props.addFish}),/*#__PURE__*/React.createElement(\"button\",{onClick:this.props.loadSamples},\"load Sample Fishes\"));}}]);return Inventory;}(React.Component);export default Inventory;","map":{"version":3,"sources":["/home/pal/Desktop/react-beginner/src/components/Inventory.js"],"names":["React","AddFishForm","base","firebase","Inventory","uiConfig","signInFlow","signInOptions","auth","FacebookAuthProvider","PROVIDER_ID","TwitterAuthProvider","GithubAuthProvider","callbacks","signInSuccess","authHandler","authData","fetch","props","storeId","context","store","console","log","owner","post","data","user","uid","setState","authenticate","provider","authProvider","signInWithPopup","then","renderInventory","bind","handleChange","renderLogin","logout","state","onAuthStateChanged","e","key","fish","fishes","updatedFish","target","name","value","updateFish","price","status","desc","image","removeFish","signOut","Object","keys","map","addFish","loadSamples","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AddFishForm from './AddFishForm';\nimport PropTypes from 'prop-types';\nimport base from '../base';\nimport firebase from 'firebase';\n\nclass Inventory extends React.Component {\n\n    uiConfig = {\n        signInFlow: \"popup\",\n        signInOptions: [\n            // firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n            firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n            firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n            firebase.auth.GithubAuthProvider.PROVIDER_ID,\n            //firebase.auth.EmailAuthProvider.PROVIDER_ID\n        ],\n        callbacks: {\n            signInSuccess: () => false\n        }\n    }\n\n\n    constructor() {\n        super();\n        this.renderInventory = this.renderInventory.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.renderLogin = this.renderLogin.bind(this);\n        this.authenticate = this.authenticate.bind(this);\n        this.authHandler = this.authHandler.bind(this);\n        this.logout = this.logout.bind(this);\n        this.state = {\n            uid:null,\n            owner:null\n        }\n    }\n\n    // life cycle hooks.\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.authHandler({ user });\n            }\n        });\n    }\n\n    handleChange(e, key) {\n        const fish = this.props.fishes[key];\n\n        const updatedFish = {\n            ...fish\n            , [e.target.name]: e.target.value\n        };\n\n        this.props.updateFish(key, updatedFish);\n    }\n\n    renderInventory(key) {\n        const fish = this.props.fishes[key];\n        return (\n            <div className=\"fish-edit\" key={key}>\n\n                <input type=\"text\" name=\"name\" value={fish.name} placeholder=\"Fish Name\" onChange={(e) => this.handleChange(e, key)} />\n                <input type=\"text\" name=\"price\" value={fish.price} placeholder=\"Fish Price\" onChange={(e) => this.handleChange(e, key)} />\n                <select type=\"text\" name=\"status\" value={fish.status} placeholder=\"Fish Status\" onChange={(e) => this.handleChange(e, key)}>\n                    <option value=\"available\" >Fresh!</option>\n                    <option value=\"unavailable\" >Sold Out!</option>\n                </select>\n                <textarea type=\"text\" name=\"desc\" value={fish.desc} placeholder=\"Fish Desc\" onChange={(e) => this.handleChange(e, key)}>\n                </textarea>\n                <input type=\"text\" name=\"image\" value={fish.image} placeholder=\"Fish Image\" onChange={(e) => this.handleChange(e, key)} />\n                <button onClick={() => this.props.removeFish(key)}>Remove Fish</button>\n            </div>\n        )\n    }\n\n    \n    authHandler = async authData => {\n        // 1 .Look up the current store in the firebase database\n        const store = await base.fetch(this.props.storeId, { context: this });\n        console.log(store);\n        // 2. Claim it if there is no owner\n        if (!store.owner) {\n            // save it as our own\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            });\n        }\n        // 3. Set the state of the inventory component to reflect the current user\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        });\n    };\n\n    authenticate = provider => {\n        if (provider === 'github') {\n            const authProvider = new firebase.auth.GithubAuthProvider();    \n            firebase\n                .auth()\n                .signInWithPopup(authProvider)\n                .then(this.authHandler);\n        }\n        else if (provider === 'facebook') {\n            const authProvider = new firebase.auth.FacebookAuthProvider();\n            firebase\n                .auth()\n                .signInWithPopup(authProvider)\n                .then(this.authHandler);\n        }\n        else\n        {\n            const authProvider = new firebase.auth.TwitterAuthProvider();\n            firebase\n                .auth()\n                .signInWithPopup(authProvider)\n                .then(this.authHandler);\n        }\n    };\n\n    \n    // authenticate = (provider) => {\n    //     console.log(`Trying to login with ${provider}`);\n    //     console.log(this.props.storeId);\n    //     if (provider === 'github') {\n    //         var provider = new firebase.auth.GithubAuthProvider();\n\n    //         provider.addScope('repo');\n\n    //         firebase.auth().signInWithPopup(provider).then( (result) => {\n    //             console.log(result);\n\n    //             // grab the store info if the user has successfully authenticate.\n    //             const storeRef = firebase.database().ref(this.props.storeId);\n\n    //             // query the firebase once for the data\n    //             storeRef.once('value', (snapshot) => {\n    //                 const data = snapshot.val() || {};\n\n    //                 // claim it as our own if there is no owner already.\n    //                 if (!data.owner) {\n    //                     storeRef.set({\n    //                         owner: result.user.uid\n    //                     });\n    //                 }\n\n    //                 this.setState({\n    //                     uid: result.user.uid,\n    //                     owner: data.owner || result.user.uid\n    //                 })\n    //             });\n\n    //         }).catch(function (error) {\n    //             console.log(error);\n    //         });    \n    //     }\n    //     else if (provider === 'facebook') {\n    //         var provider = new firebase.auth.FacebookAuthProvider();\n\n    //         provider.addScope('user_birthday');\n\n    //         firebase.auth().signInWithPopup(provider).then( (authData) => {\n    //             console.log(authData);\n\n    //             // grab the store info if the user has successfully authenticate.\n    //             const storeRef = firebase.database().ref(this.props.storeId);\n\n    //             // query the firebase once for the data\n    //             storeRef.once('value', (snapshot) => {\n    //                 const data = snapshot.val() || {};\n\n    //                 // claim it as our own if there is no owner already.\n    //                 if (!data.owner) {\n    //                     storeRef.set({\n    //                         owner: authData.user.uid\n    //                     });\n    //                 }\n\n    //                 this.setState({\n    //                     uid: authData.user.uid,\n    //                     owner: data.owner || authData.user.uid\n    //                 })\n    //             });\n\n    //         }).catch(function (error) {\n    //             console.log(error);\n    //         });\n    //     }\n    //     else\n    //     {\n    //         var provider = new firebase.auth.TwitterAuthProvider();\n\n    //         // here we have to use arrow functions because in normal functions storeId won't be accessible because of this keyword.\n    //         firebase.auth().signInWithPopup(provider).then( (authData) => {\n    //             console.log(authData);\n\n    //             // grab the store info if the user has successfully authenticate.\n    //             const storeRef = firebase.database().ref(this.props.storeId);\n\n    //             // query the firebase once for the data\n    //             storeRef.once('value', (snapshot) => {\n    //                 const data = snapshot.val() || {};\n\n    //                 // claim it as our own if there is no owner already.\n    //                 if (!data.owner) {\n    //                     storeRef.set({\n    //                         owner: authData.user.uid\n    //                     });\n    //                 }\n\n    //                 this.setState({\n    //                     uid: authData.user.uid,\n    //                     owner: data.owner || authData.user.uid\n    //                 })\n    //             });\n\n    //         }).catch(function (error) {\n    //             console.log(error);\n    //         });\n    //     }\n\n    //     //base.AuthWithOAuthPopup(provider,this.authHandler); \n        \n    // }\n\n    \n    // logout method\n    logout() {\n        firebase.auth().signOut();\n        this.setState({ uid: null });\n    }\n\n\n    renderLogin() {\n        return (\n            <nav className=\"login\">\n                <h2>Inventory</h2>\n                <p>Sign in to manage your store's inventory</p>\n                <button className=\"github\" onClick={() => this.authenticate('github')}>Log In with Github</button>\n                <button className=\"facebook\" onClick={() => this.authenticate('facebook')} >Log In with Facebook</button>\n                <button className=\"twitter\" onClick={() => this.authenticate('twitter')} >Log In with Twitter</button>\n            </nav>\n        )\n    }\n\n    render() {\n        const logout = <button onClick={this.logout}>Log Out!!</button>\n\n\n        //check if they are not logged in at all\n        if (!this.state.uid) {\n            return <div>{this.renderLogin()}</div>\n        }\n\n        // check if they are the owner of the current store.\n        if(this.state.uid !== this.state.owner){\n            return(\n                <div>\n                    <p>Sorry you are not the owner of the Store</p>\n                    {logout}\n                </div>\n            )\n        }    \n\n\n        return (\n            <div>\n                <h2>Inventory</h2>\n                {logout}\n                {Object.keys(this.props.fishes).map(this.renderInventory)}\n                <AddFishForm addFish={this.props.addFish} />\n                <button onClick={this.props.loadSamples}>load Sample Fishes</button>\n            </div>\n\n        )\n    }\n}\n\nInventory.propTypes = {\n    fishes: PropTypes.object.isRequired,\n    updateFish: PropTypes.func.isRequired,\n    removeFish: PropTypes.func.isRequired,\n    addFish: PropTypes.func.isRequired,\n    loadSamples: PropTypes.func.isRequired,\n    storeId: PropTypes.string.isRequired,\n};\n\nexport default Inventory;"]},"metadata":{},"sourceType":"module"}