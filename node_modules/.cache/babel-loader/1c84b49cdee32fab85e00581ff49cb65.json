{"ast":null,"code":"var _jsxFileName = \"/home/pal/Desktop/react-beginner/src/components/StorePicker.js\";\nimport React from 'react';\nimport { getFunName } from '../helpers';\nimport PropTypes from 'prop-types'; // creating a component.\n// props to pass data from one component to other component and state to hold the data.\n\nexport default class StorePicker extends React.Component {\n  // constructor(){\n  //     super();    // runs the React.Component first than StorePicker.\n  //     this.goToStore = this.goToStore.bind(this);     // we have to bind every single function other than the render. Because only render is bind and not other by default.\n  // }\n  goToStore(event) {\n    // first grab the text from the box.\n    event.preventDefault();\n    const storeId = this.storeInput.value;\n    console.log(this.storeInput.value); // second do the transition from / to /store/..\n\n    this.props.history.push(`/store/${storeId}`);\n  } // render method are bound to the component while other method like goToStore doesn't bound to the component.\n\n\n  render() {\n    //return <p>Hello World</p>;\n    // creating paragraph tag with class Name Testing and text React is Awesome.\n    //return React.createElement('p',{className:'Testing'},'React is Awesome');\n    return (\n      /*#__PURE__*/\n      // JSX will return only one element so make it a parent element.\n      React.createElement(\"form\", {\n        className: \"store-selector\",\n        onSubmit: e => this.goToStore(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, \"Please Enter A Store\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        placeholder: \"Store Name\",\n        defaultValue: getFunName(),\n        ref: input => {\n          this.storeInput = input;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, \"Visit Store\"))\n    );\n  }\n\n}\nStorePicker.contextType = {\n  router: PropTypes.object\n}; // getting our router OR surface our router.","map":{"version":3,"sources":["/home/pal/Desktop/react-beginner/src/components/StorePicker.js"],"names":["React","getFunName","PropTypes","StorePicker","Component","goToStore","event","preventDefault","storeId","storeInput","value","console","log","props","history","push","render","e","input","contextType","router","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAGA;AACA;;AACA,eAAe,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAAyC;AAEpD;AACA;AACA;AACA;AAEAC,EAAAA,SAAS,CAACC,KAAD,EAAO;AACZ;AACAA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,OAAO,GAAG,KAAKC,UAAL,CAAgBC,KAAhC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,UAAL,CAAgBC,KAA5B,EAJY,CAMZ;;AACA,SAAKG,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAyB,UAASP,OAAQ,EAA1C;AACH,GAfmD,CAkBpD;;;AACHQ,EAAAA,MAAM,GAAE;AACD;AAEA;AACA;AAEA;AAAA;AACI;AACA;AAAM,QAAA,SAAS,EAAG,gBAAlB;AAAmC,QAAA,QAAQ,EAAGC,CAAD,IAAO,KAAKZ,SAAL,CAAeY,CAAf,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAJJ,eAKI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,MAA3B;AAA4B,QAAA,WAAW,EAAC,YAAxC;AAAqD,QAAA,YAAY,EAAEhB,UAAU,EAA7E;AAAiF,QAAA,GAAG,EAAGiB,KAAD,IAAW;AAAC,eAAKT,UAAL,GAAkBS,KAAlB;AAAwB,SAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,eAMI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANJ;AAFJ;AAWH;;AApCmD;AAwCxDf,WAAW,CAACgB,WAAZ,GAAwB;AACpBC,EAAAA,MAAM,EAAElB,SAAS,CAACmB;AADE,CAAxB,C,CAKA","sourcesContent":["import React from 'react';\nimport { getFunName } from '../helpers';\nimport PropTypes from 'prop-types';    \n\n\n// creating a component.\n// props to pass data from one component to other component and state to hold the data.\nexport default class StorePicker extends React.Component{\n\n    // constructor(){\n    //     super();    // runs the React.Component first than StorePicker.\n    //     this.goToStore = this.goToStore.bind(this);     // we have to bind every single function other than the render. Because only render is bind and not other by default.\n    // }\n\n    goToStore(event){\n        // first grab the text from the box.\n        event.preventDefault();\n        const storeId = this.storeInput.value;\n        console.log(this.storeInput.value);   \n\n        // second do the transition from / to /store/..\n        this.props.history.push(`/store/${storeId}`);\n    }\n\n\n    // render method are bound to the component while other method like goToStore doesn't bound to the component.\n\trender(){\n        //return <p>Hello World</p>;\n        \n        // creating paragraph tag with class Name Testing and text React is Awesome.\n        //return React.createElement('p',{className:'Testing'},'React is Awesome');\n\n        return(\n            // JSX will return only one element so make it a parent element.\n            <form className = \"store-selector\" onSubmit={(e) => this.goToStore(e)}>    \n                {/* we can bind onSubmit event by this.goToStore.bind(this) or with the help of constructor. */}\n\n                {/* comment in jsx */}\n                <h2>Please Enter A Store</h2>\n                <input type=\"text\" required placeholder=\"Store Name\" defaultValue={getFunName()} ref={(input) => {this.storeInput = input}} />\n                <button type=\"submit\">Visit Store</button>\n            </form>\n        )   \n    }\n\n}\n\nStorePicker.contextType={\n    router: PropTypes.object\n}\n\n\n// getting our router OR surface our router."]},"metadata":{},"sourceType":"module"}