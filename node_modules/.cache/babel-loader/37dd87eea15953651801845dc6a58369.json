{"ast":null,"code":"var _jsxFileName = \"/home/pal/Desktop/react-beginner/src/components/Order.js\";\nimport React from 'react';\nimport { object } from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport CSSTransitionGroup from 'react-transition-group';\n\nclass Order extends React.Component {\n  constructor() {\n    super();\n    this.renderOrder = this.renderOrder.bind(this);\n  }\n\n  renderOrder(key) {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const removeButton = /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.removeFromOrder(key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 30\n      }\n    }, \"\\xD7\");\n\n    if (!fish || fish.status === 'unavailable') {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 20\n        }\n      }, \"Sorry \", fish ? fish.name : 'Fish', \" is not available\", removeButton);\n    }\n\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, count, \" lbs \", fish.name, removeButton), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, formatPrice(count * fish.price)));\n  }\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n\n      if (isAvailable) {\n        return prevTotal + (count * fish.price || 0);\n      }\n\n      return prevTotal;\n    }, 0);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"order-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"Your Order\"), \"00\", /*#__PURE__*/React.createElement(CSSTransitionGroup, {\n      className: \"order\",\n      component: \"ul\",\n      transitionName: \"order\",\n      transitionEnter: 500,\n      transitionLeave: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, orderIds.map(this.renderOrder), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, \"Total:\"), formatPrice(total))));\n  }\n\n}\n\nexport default Order;","map":{"version":3,"sources":["/home/pal/Desktop/react-beginner/src/components/Order.js"],"names":["React","object","formatPrice","CSSTransitionGroup","Order","Component","constructor","renderOrder","bind","key","fish","props","fishes","count","order","removeButton","removeFromOrder","status","name","price","render","orderIds","Object","keys","total","reduce","prevTotal","isAvailable","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { object } from 'prop-types';\nimport {formatPrice} from '../helpers';\nimport CSSTransitionGroup from 'react-transition-group';\n\nclass Order extends React.Component{\n\n    constructor(){\n        super();\n        this.renderOrder = this.renderOrder.bind(this);\n    }\n\n    renderOrder(key){\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n\n        const removeButton = <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n\n        if(!fish || fish.status === 'unavailable')\n        {\n            return <li key={key}>Sorry {fish ? fish.name:'Fish'} is not available{removeButton}</li>\n        }\n\n        return (\n            <li key={key}>\n                <span>{count} lbs {fish.name}{removeButton}</span>\n                <span className=\"price\">{formatPrice(count * fish.price)}</span>\n            </li>\n        )\n    }\n\n    render(){\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal,key) =>{\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n\n            const isAvailable = fish && fish.status === 'available';\n\n            if (isAvailable) {\n                return prevTotal + (count * fish.price || 0);\n            }\n            return prevTotal;\n        },0);\n        return(\n            <div className=\"order-wrap\">\n                <h2>Your Order</h2>00\n                <CSSTransitionGroup className=\"order\" component=\"ul\" transitionName = \"order\"\n                    transitionEnter={500}\n                    transitionLeave={500}\n                    >\n                    {orderIds.map(this.renderOrder)}\n                    <li className=\"total\">\n                        <strong>Total:</strong>\n                        {formatPrice(total)}\n                    </li>\n                </CSSTransitionGroup>\n            </div>\n        )\n    }\n}\n\nexport default Order;"]},"metadata":{},"sourceType":"module"}