{"ast":null,"code":"var _jsxFileName = \"/home/pal/Desktop/react-beginner/src/components/Inventory.js\";\nimport React from 'react';\nimport AddFishForm from './AddFishForm';\nimport PropTypes from 'prop-types';\nimport base from '../base';\nimport firebase from 'firebase';\n\nclass Inventory extends React.Component {\n  constructor() {\n    super();\n    this.uiConfig = {\n      signInFlow: \"popup\",\n      signInOptions: [// firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID, firebase.auth.TwitterAuthProvider.PROVIDER_ID, firebase.auth.GithubAuthProvider.PROVIDER_ID //firebase.auth.EmailAuthProvider.PROVIDER_ID\n      ],\n      callbacks: {\n        signInSuccess: () => false\n      }\n    };\n\n    this.authenticate = provider => {\n      console.log(`Trying to login with ${provider}`);\n      console.log(this.props.storeId);\n\n      if (provider === 'github') {\n        var provider = new firebase.auth.GithubAuthProvider();\n        provider.addScope('repo');\n        firebase.auth().signInWithPopup(provider).then(result => {\n          console.log(result); // grab the store info if the user has successfully authenticate.\n\n          const storeRef = firebase.database().ref(this.props.storeId); // query the firebase once for the data\n\n          storeRef.once('value', snapshot => {\n            const data = snapshot.val() || {}; // claim it as our own if there is no owner already.\n\n            if (!data.owner) {\n              storeRef.set({\n                owner: result.user.uid\n              });\n            }\n\n            this.setState({\n              uid: result.user.uid,\n              owner: data.owner || result.user.uid\n            });\n          });\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (provider === 'facebook') {\n        var provider = new firebase.auth.FacebookAuthProvider();\n        provider.addScope('user_birthday');\n        firebase.auth().signInWithPopup(provider).then(authData => {\n          console.log(authData); // grab the store info if the user has successfully authenticate.\n\n          const storeRef = firebase.database().ref(this.props.storeId); // query the firebase once for the data\n\n          storeRef.once('value', snapshot => {\n            const data = snapshot.val() || {}; // claim it as our own if there is no owner already.\n\n            if (!data.owner) {\n              storeRef.set({\n                owner: authData.user.uid\n              });\n            }\n\n            this.setState({\n              uid: authData.user.uid,\n              owner: data.owner || authData.user.uid\n            });\n          });\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        var provider = new firebase.auth.TwitterAuthProvider(); // here we have to use arrow functions because in normal functions storeId won't be accessible because of this keyword.\n\n        firebase.auth().signInWithPopup(provider).then(authData => {\n          console.log(authData); // grab the store info if the user has successfully authenticate.\n\n          const storeRef = firebase.database().ref(this.props.storeId); // query the firebase once for the data\n\n          storeRef.once('value', snapshot => {\n            const data = snapshot.val() || {}; // claim it as our own if there is no owner already.\n\n            if (!data.owner) {\n              storeRef.set({\n                owner: authData.user.uid\n              });\n            }\n\n            this.setState({\n              uid: authData.user.uid,\n              owner: data.owner || authData.user.uid\n            });\n          });\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } //base.AuthWithOAuthPopup(provider,this.authHandler); \n\n    };\n\n    this.renderInventory = this.renderInventory.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.renderLogin = this.renderLogin.bind(this);\n    this.authenticate = this.authenticate.bind(this);\n    this.state = {\n      uid: null,\n      owner: null\n    };\n  } // life cycle hooks.\n\n\n  componentDidMount() {\n    firebase.onAuth(user => {});\n  }\n\n  handleChange(e, key) {\n    const fish = this.props.fishes[key];\n    const updatedFish = { ...fish,\n      [e.target.name]: e.target.value\n    };\n    this.props.updateFish(key, updatedFish);\n  }\n\n  renderInventory(key) {\n    const fish = this.props.fishes[key];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fish-edit\",\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: fish.name,\n      placeholder: \"Fish Name\",\n      onChange: e => this.handleChange(e, key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"price\",\n      value: fish.price,\n      placeholder: \"Fish Price\",\n      onChange: e => this.handleChange(e, key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      type: \"text\",\n      name: \"status\",\n      value: fish.status,\n      placeholder: \"Fish Status\",\n      onChange: e => this.handleChange(e, key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"available\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, \"Fresh!\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"unavailable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"Sold Out!\")), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"desc\",\n      value: fish.desc,\n      placeholder: \"Fish Desc\",\n      onChange: e => this.handleChange(e, key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"image\",\n      value: fish.image,\n      placeholder: \"Fish Image\",\n      onChange: e => this.handleChange(e, key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.removeFish(key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Remove Fish\"));\n  }\n\n  renderLogin() {\n    return /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, \"Inventory\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, \"Sign in to manage your store's inventory\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"github\",\n      onClick: () => this.authenticate('github'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, \"Log In with Github\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"facebook\",\n      onClick: () => this.authenticate('facebook'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, \"Log In with Facebook\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"twitter\",\n      onClick: () => this.authenticate('twitter'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, \"Log In with Twitter\"));\n  }\n\n  render() {\n    const logout = /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 24\n      }\n    }, \"Log Out!!\"); //check if they are not logged in at all\n\n    if (!this.state.uid) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 20\n        }\n      }, this.renderLogin());\n    } // check if they are the owner of the current store.\n\n\n    if (this.state.uid !== this.state.owner) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }\n      }, \"Sorry you are not the owner of the Store\"), logout);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, \"Inventory\"), logout, Object.keys(this.props.fishes).map(this.renderInventory), /*#__PURE__*/React.createElement(AddFishForm, {\n      addFish: this.props.addFish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.props.loadSamples,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    }, \"load Sample Fishes\"));\n  }\n\n}\n\nInventory.propTypes = {\n  fishes: PropTypes.object.isRequired,\n  updateFish: PropTypes.func.isRequired,\n  removeFish: PropTypes.func.isRequired,\n  addFish: PropTypes.func.isRequired,\n  loadSamples: PropTypes.func.isRequired,\n  storeId: PropTypes.string.isRequired\n};\nexport default Inventory;","map":{"version":3,"sources":["/home/pal/Desktop/react-beginner/src/components/Inventory.js"],"names":["React","AddFishForm","PropTypes","base","firebase","Inventory","Component","constructor","uiConfig","signInFlow","signInOptions","auth","FacebookAuthProvider","PROVIDER_ID","TwitterAuthProvider","GithubAuthProvider","callbacks","signInSuccess","authenticate","provider","console","log","props","storeId","addScope","signInWithPopup","then","result","storeRef","database","ref","once","snapshot","data","val","owner","set","user","uid","setState","catch","error","authData","renderInventory","bind","handleChange","renderLogin","state","componentDidMount","onAuth","e","key","fish","fishes","updatedFish","target","name","value","updateFish","price","status","desc","image","removeFish","render","logout","Object","keys","map","addFish","loadSamples","propTypes","object","isRequired","func","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AddFishForm from './AddFishForm';\nimport PropTypes from 'prop-types';\nimport base from '../base';\nimport firebase from 'firebase';\n\nclass Inventory extends React.Component {\n\n    uiConfig = {\n        signInFlow: \"popup\",\n        signInOptions: [\n            // firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n            firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n            firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n            firebase.auth.GithubAuthProvider.PROVIDER_ID,\n            //firebase.auth.EmailAuthProvider.PROVIDER_ID\n        ],\n        callbacks: {\n            signInSuccess: () => false\n        }\n    }\n\n\n    constructor() {\n        super();\n        this.renderInventory = this.renderInventory.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.renderLogin = this.renderLogin.bind(this);\n        this.authenticate = this.authenticate.bind(this);\n        this.state = {\n            uid:null,\n            owner:null\n        }\n    }\n\n    // life cycle hooks.\n    componentDidMount() {\n        firebase.onAuth((user) => {\n            \n        })\n    }\n\n    handleChange(e, key) {\n        const fish = this.props.fishes[key];\n\n        const updatedFish = {\n            ...fish\n            , [e.target.name]: e.target.value\n        };\n\n        this.props.updateFish(key, updatedFish);\n    }\n\n    renderInventory(key) {\n        const fish = this.props.fishes[key];\n        return (\n            <div className=\"fish-edit\" key={key}>\n\n                <input type=\"text\" name=\"name\" value={fish.name} placeholder=\"Fish Name\" onChange={(e) => this.handleChange(e, key)} />\n                <input type=\"text\" name=\"price\" value={fish.price} placeholder=\"Fish Price\" onChange={(e) => this.handleChange(e, key)} />\n                <select type=\"text\" name=\"status\" value={fish.status} placeholder=\"Fish Status\" onChange={(e) => this.handleChange(e, key)}>\n                    <option value=\"available\" >Fresh!</option>\n                    <option value=\"unavailable\" >Sold Out!</option>\n                </select>\n                <textarea type=\"text\" name=\"desc\" value={fish.desc} placeholder=\"Fish Desc\" onChange={(e) => this.handleChange(e, key)}>\n                </textarea>\n                <input type=\"text\" name=\"image\" value={fish.image} placeholder=\"Fish Image\" onChange={(e) => this.handleChange(e, key)} />\n                <button onClick={() => this.props.removeFish(key)}>Remove Fish</button>\n            </div>\n        )\n    }\n\n    authenticate = (provider)=>{\n        console.log(`Trying to login with ${provider}`);\n        console.log(this.props.storeId);\n        if (provider === 'github') {\n            var provider = new firebase.auth.GithubAuthProvider();\n\n            provider.addScope('repo');\n\n            firebase.auth().signInWithPopup(provider).then( (result) => {\n                console.log(result);\n\n                // grab the store info if the user has successfully authenticate.\n                const storeRef = firebase.database().ref(this.props.storeId);\n\n                // query the firebase once for the data\n                storeRef.once('value', (snapshot) => {\n                    const data = snapshot.val() || {};\n\n                    // claim it as our own if there is no owner already.\n                    if (!data.owner) {\n                        storeRef.set({\n                            owner: result.user.uid\n                        });\n                    }\n\n                    this.setState({\n                        uid: result.user.uid,\n                        owner: data.owner || result.user.uid\n                    })\n                });\n\n            }).catch(function (error) {\n                console.log(error);\n            });    \n        }\n        else if (provider === 'facebook') {\n            var provider = new firebase.auth.FacebookAuthProvider();\n\n            provider.addScope('user_birthday');\n\n            firebase.auth().signInWithPopup(provider).then( (authData) => {\n                console.log(authData);\n\n                // grab the store info if the user has successfully authenticate.\n                const storeRef = firebase.database().ref(this.props.storeId);\n\n                // query the firebase once for the data\n                storeRef.once('value', (snapshot) => {\n                    const data = snapshot.val() || {};\n\n                    // claim it as our own if there is no owner already.\n                    if (!data.owner) {\n                        storeRef.set({\n                            owner: authData.user.uid\n                        });\n                    }\n\n                    this.setState({\n                        uid: authData.user.uid,\n                        owner: data.owner || authData.user.uid\n                    })\n                });\n\n            }).catch(function (error) {\n                console.log(error);\n            });\n        }\n        else\n        {\n            var provider = new firebase.auth.TwitterAuthProvider();\n\n            // here we have to use arrow functions because in normal functions storeId won't be accessible because of this keyword.\n            firebase.auth().signInWithPopup(provider).then( (authData) => {\n                console.log(authData);\n\n                // grab the store info if the user has successfully authenticate.\n                const storeRef = firebase.database().ref(this.props.storeId);\n\n                // query the firebase once for the data\n                storeRef.once('value', (snapshot) => {\n                    const data = snapshot.val() || {};\n\n                    // claim it as our own if there is no owner already.\n                    if (!data.owner) {\n                        storeRef.set({\n                            owner: authData.user.uid\n                        });\n                    }\n\n                    this.setState({\n                        uid: authData.user.uid,\n                        owner: data.owner || authData.user.uid\n                    })\n                });\n\n            }).catch(function (error) {\n                console.log(error);\n            });\n        }\n\n        //base.AuthWithOAuthPopup(provider,this.authHandler); \n        \n    }\n\n    \n\n    renderLogin() {\n        return (\n            <nav className=\"login\">\n                <h2>Inventory</h2>\n                <p>Sign in to manage your store's inventory</p>\n                <button className=\"github\" onClick={() => this.authenticate('github')}>Log In with Github</button>\n                <button className=\"facebook\" onClick={() => this.authenticate('facebook')} >Log In with Facebook</button>\n                <button className=\"twitter\" onClick={() => this.authenticate('twitter')} >Log In with Twitter</button>\n            </nav>\n        )\n    }\n\n    render() {\n        const logout = <button>Log Out!!</button>\n\n\n        //check if they are not logged in at all\n        if (!this.state.uid) {\n            return <div>{this.renderLogin()}</div>\n        }\n\n        // check if they are the owner of the current store.\n        if(this.state.uid !== this.state.owner){\n            return(\n                <div>\n                    <p>Sorry you are not the owner of the Store</p>\n                    {logout}\n                </div>\n            )\n        }    \n\n\n        return (\n            <div>\n                <h2>Inventory</h2>\n                {logout}\n                {Object.keys(this.props.fishes).map(this.renderInventory)}\n                <AddFishForm addFish={this.props.addFish} />\n                <button onClick={this.props.loadSamples}>load Sample Fishes</button>\n            </div>\n\n        )\n    }\n}\n\nInventory.propTypes = {\n    fishes: PropTypes.object.isRequired,\n    updateFish: PropTypes.func.isRequired,\n    removeFish: PropTypes.func.isRequired,\n    addFish: PropTypes.func.isRequired,\n    loadSamples: PropTypes.func.isRequired,\n    storeId: PropTypes.string.isRequired,\n};\n\nexport default Inventory;"]},"metadata":{},"sourceType":"module"}