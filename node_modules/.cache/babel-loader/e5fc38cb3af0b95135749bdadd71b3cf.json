{"ast":null,"code":"import _objectSpread from\"/home/pal/Desktop/react-beginner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/pal/Desktop/react-beginner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/pal/Desktop/react-beginner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/pal/Desktop/react-beginner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/pal/Desktop/react-beginner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/pal/Desktop/react-beginner/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Header from'./Header';import Inventory from'./Inventory';import Order from'./Order';import sampleFishes from'./../sample-fishes';import Fish from'./Fish';import base from'../base';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);_this=_super.call(this);_this.addFish=_this.addFish.bind(_assertThisInitialized(_this));_this.updateFish=_this.updateFish.bind(_assertThisInitialized(_this));_this.removeFish=_this.removeFish.bind(_assertThisInitialized(_this));_this.loadSamples=_this.loadSamples.bind(_assertThisInitialized(_this));_this.addToOrder=_this.addToOrder.bind(_assertThisInitialized(_this));_this.removeFromOrder=_this.removeFromOrder.bind(_assertThisInitialized(_this));// getinitial state.\n_this.state={fishes:{},// we are syncing fishes to the firebase.\norder:{}// we are not syncing order to the firebase. But we are syncing to the localStorage.\n};return _this;}_createClass(App,[{key:\"componentWillMount\",value:function componentWillMount(){// this run right before the app is render\nthis.ref=base.syncState(\"\".concat(this.props.match.params.storeId,\"/fishes\"),{context:this,state:'fishes'});// check if there is any order in localstorage.\nvar localStorageRef=localStorage.getItem(\"order-\".concat(this.props.match.params.storeId));if(localStorageRef){// update our APP componen's order state\nthis.setState({order:JSON.parse(localStorageRef)// first converting localStorageREf to object and than storing it.\n});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){base.removeBinding(this.ref);}},{key:\"componentWillUpdate\",value:function componentWillUpdate(nextProps,nextState){localStorage.setItem(\"order-\".concat(this.props.match.params.storeId),JSON.stringify(nextState.order));// converting nextState.order to string using json method.\n}},{key:\"addFish\",value:function addFish(fish){// update our state. First take copy of the current state than update the state.\nvar fishes=_objectSpread({},this.state.fishes);// add in our new fishes.\nvar timestamp=Date.now();fishes[\"fishes-\".concat(timestamp)]=fish;// set state.\nthis.setState({fishes:fishes});}},{key:\"loadSamples\",value:function loadSamples(){this.setState({fishes:sampleFishes});}},{key:\"addToOrder\",value:function addToOrder(key){// take a copy of the state.\nvar order=_objectSpread({},this.state.order);// update or add new number of fish ordered.\norder[key]=order[key]+1||1;// set state.\nthis.setState({order:order});}},{key:\"updateFish\",value:function updateFish(key,updatedFish){var fishes=_objectSpread({},this.state.fishes);fishes[key]=updatedFish;this.setState({fishes:fishes});// destructutring.\n}},{key:\"removeFish\",value:function removeFish(key){var fishes=_objectSpread({},this.state.fishes);fishes[key]=null;// we can't use delete becuase of the firebase.\nthis.setState({fishes:fishes});}},{key:\"removeFromOrder\",value:function removeFromOrder(key){var order=_objectSpread({},this.state.order);delete order[key];// we can use delete because order is store in localstorage and not in firebase.\nthis.setState({order:order});}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"catch-of-the-day\"},/*#__PURE__*/React.createElement(\"div\",{className:\"menu\"},/*#__PURE__*/React.createElement(Header,{tagline:\"Fresh Sea Food Market\"}),/*#__PURE__*/React.createElement(\"ul\",{className:\"list-of-fishes\"},Object.keys(this.state.fishes).map(function(key){return/*#__PURE__*/React.createElement(Fish,{key:key,index:key,details:_this2.state.fishes[key],addToOrder:_this2.addToOrder,params:_this2.props.match.params});}))),/*#__PURE__*/React.createElement(Order,{fishes:this.state.fishes,order:this.state.order,removeFromOrder:this.removeFromOrder}),/*#__PURE__*/React.createElement(Inventory,{addFish:this.addFish,loadSamples:this.loadSamples,fishes:this.state.fishes,updateFish:this.updateFish,removeFish:this.removeFish,storeId:this.props.match.params.storeId}));}}]);return App;}(React.Component);// App.propTypes = {\n// \tparams : PropTypes.object.isRequired\n// }\nexport default App;","map":{"version":3,"sources":["/home/pal/Desktop/react-beginner/src/components/App.js"],"names":["React","Header","Inventory","Order","sampleFishes","Fish","base","App","addFish","bind","updateFish","removeFish","loadSamples","addToOrder","removeFromOrder","state","fishes","order","ref","syncState","props","match","params","storeId","context","localStorageRef","localStorage","getItem","setState","JSON","parse","removeBinding","nextProps","nextState","setItem","stringify","fish","timestamp","Date","now","key","updatedFish","Object","keys","map","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Inventory from './Inventory';\nimport Order from './Order';\nimport sampleFishes from './../sample-fishes'; \nimport Fish from './Fish';\nimport { object } from 'prop-types';\nimport base from '../base';\nimport PropTypes from 'prop-types';    \n\nclass App extends React.Component {\n\t\n\tconstructor(){\n\t\tsuper();\n\n\t\tthis.addFish = this.addFish.bind(this);\n\t\tthis.updateFish = this.updateFish.bind(this);\n\t\tthis.removeFish = this.removeFish.bind(this);\n\t\tthis.loadSamples = this.loadSamples.bind(this);\n\t\tthis.addToOrder = this.addToOrder.bind(this);\n\t\tthis.removeFromOrder = this.removeFromOrder.bind(this);\n\n\t\t// getinitial state.\n\t\tthis.state = {\n\t\t\tfishes: {},\t\t// we are syncing fishes to the firebase.\n\t\t\torder:{},\t// we are not syncing order to the firebase. But we are syncing to the localStorage.\n\n\t\t}\n\t}\n\t\n\tcomponentWillMount(){\n\t\t// this run right before the app is render\n\t\tthis.ref = base.syncState(`${this.props.match.params.storeId}/fishes`,{\n\t\t\tcontext:this,\n\t\t\tstate: 'fishes'\n\t\t});\n\n\t\t// check if there is any order in localstorage.\n\t\tconst localStorageRef = localStorage.getItem(`order-${this.props.match.params.storeId}`);\n\n\t\tif (localStorageRef) {\n\t\t\t// update our APP componen's order state\n\t\t\tthis.setState({\n\t\t\t\torder: JSON.parse(localStorageRef)\t\t// first converting localStorageREf to object and than storing it.\n\t\t\t})\n\t\t}\n\t}\n\n\tcomponentWillUnmount(){\n\t\tbase.removeBinding(this.ref);\n\t}\n\n\tcomponentWillUpdate(nextProps,nextState){\n\t\tlocalStorage.setItem(`order-${this.props.match.params.storeId}`,\n\t\tJSON.stringify(nextState.order));\t// converting nextState.order to string using json method.\n\t}\n\n\n\taddFish(fish){\n\t\t// update our state. First take copy of the current state than update the state.\n\t\tconst fishes = {...this.state.fishes};\n\t\t// add in our new fishes.\n\t\tconst timestamp = Date.now();\n\t\tfishes[`fishes-${timestamp}`] = fish;\n\n\n\t\t// set state.\n\t\tthis.setState({fishes:fishes})\n\t}\n\n\tloadSamples(){\n\t\tthis.setState({\n\t\t\tfishes: sampleFishes\n\t\t});\n\t}\n\n\taddToOrder(key){\n\t\t// take a copy of the state.\n\t\tconst order = {...this.state.order};\n\n\t\t// update or add new number of fish ordered.\n\t\torder[key] = order[key] + 1 || 1; \n\n\t\t// set state.\n\t\tthis.setState({order:order});\n\t}\n\n\tupdateFish(key,updatedFish)\n\t{\n\t\tconst fishes = {...this.state.fishes}\n\t\tfishes[key] = updatedFish;\n\t\tthis.setState({fishes});\t// destructutring.\n\t}\n\n\tremoveFish(key){\n\t\tconst fishes = {...this.state.fishes};\n\n\t\tfishes[key] = null;\t\t// we can't use delete becuase of the firebase.\n\t\tthis.setState({fishes});\n\t}\n\n\tremoveFromOrder(key){\n\t\tconst order = {...this.state.order};\n\t\tdelete order[key];\t// we can use delete because order is store in localstorage and not in firebase.\n\t\tthis.setState({order});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"catch-of-the-day\">\n\t\t\t\t<div className=\"menu\">\n\t\t\t\t\t<Header tagline=\"Fresh Sea Food Market\"/>\n\t\t\t\t\t<ul className=\"list-of-fishes\">\n\t\t\t\t\t\t{/* For looping over something in react we need and array and use map method on it. */}\n\t\t\t\t\t\t{Object\n\t\t\t\t\t\t.keys(this.state.fishes)\n\t\t\t\t\t\t.map(key => <Fish key={key} index={key} details = {this.state.fishes[key]} addToOrder={this.addToOrder}\n\t\t\t\t\t\t\tparams={this.props.match.params}\n\t\t\t\t\t\t/>)\n\t\t\t\t\t\t}\n\t\t\t\t\t</ul>\n\t\t\t\t\t{/* here we have made tagline as props which will be available to use in the components for fetching the data */}\n\t\t\t\t</div>\n\t\t\t\t<Order fishes={this.state.fishes} order={this.state.order}\n\t\t\t\t\tremoveFromOrder={this.removeFromOrder}\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<Inventory \n\t\t\t\taddFish={this.addFish} \n\t\t\t\tloadSamples={this.loadSamples} \n\t\t\t\tfishes={this.state.fishes}\n\t\t\t\tupdateFish={this.updateFish}\n\t\t\t\tremoveFish={this.removeFish}\n\t\t\t\tstoreId={this.props.match.params.storeId}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n// App.propTypes = {\n// \tparams : PropTypes.object.isRequired\n// }\n\nexport default App;"]},"metadata":{},"sourceType":"module"}